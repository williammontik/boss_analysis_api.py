@app.route("/boss_analyze", methods=["POST"])
def boss_analyze():
    data = request.get_json(force=True)
    try:
        # ‚Ä¶ [extract fields, parse DOB, compute age, generate metrics] ‚Ä¶

        # Build the plain‚Äêtext report (used for both screen and email)
        report_lines = []
        # [Insert the same language‚Äêbranching logic you already have,
        #  appending to report_lines each demographic line, metrics, comparison,
        #  and key findings ‚Ä¶]
        # At the end you do **not** append the footer here.

        plain_report = "\n".join(report_lines)

        # Build the email HTML (with footer blocks)
        footer_html = """
<div style="background-color:#e6f7ff; color:#00529B; padding:15px; border-left:4px solid #00529B; margin:20px 0;">
  <strong>The insights in this report are generated by KataChat‚Äôs AI systems analyzing:</strong><br>
  1. Our proprietary database of anonymized professional profiles across Singapore, Malaysia, and Taiwan<br>
  2. Aggregated global business benchmarks from trusted OpenAI research and leadership trend datasets<br>
  <em>All data is processed through our AI models to identify statistically significant patterns while maintaining strict PDPA compliance. Sample sizes vary by analysis, with minimum thresholds of 1,000+ data points for management comparisons.</em>
</div>
<p style="background-color:#e6f7ff; color:#00529B; padding:15px; border-left:4px solid #00529B; margin:20px 0;">
  <strong>PS:</strong> This report has also been sent to your email inbox and should arrive within 24 hours. If you'd like to discuss it further, feel free to reach out ‚Äî we‚Äôre happy to arrange a 15-minute call at your convenience.
</p>
"""
        html = f"""
<html><body style="font-family:sans-serif;color:#333">
  <h2>üéØ Boss Submission Details:</h2>
  <!-- your submission details here -->
  <hr>
  <h2>üìÑ AI-Generated Report</h2>
  <div style="font-size:14px; white-space:pre-wrap; margin-bottom:20px;">
    {plain_report}
  </div>
  {footer_html}
</body></html>
"""
        send_email(html)

        # Return JSON for the widget‚Äî**only** the plain report
        return jsonify({
            "metrics": metrics,
            "analysis": plain_report
        })

    except Exception as e:
        app.logger.exception("Error in /boss_analyze")
        return jsonify({"error": str(e)}), 500
